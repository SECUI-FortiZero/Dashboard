---
- name: Apply iptables rules
  hosts: firewall_servers
  become: yes
  gather_facts: yes

  vars:
    default_input_policy:  "{{ default_policy.input   | default('DROP')   | upper }}"
    default_forward_policy: "{{ default_policy.forward | default('DROP')   | upper }}"
    default_output_policy: "{{ default_policy.output  | default('ACCEPT') | upper }}"
    persist_rules_path: /etc/iptables/rules.v4

  pre_tasks:
    - name: Ensure iptables tools present (Debian/Ubuntu)
      apt:
        name:
          - iptables
          - iptables-persistent
          - netfilter-persistent
        state: present
        update_cache: yes
      when: ansible_facts['os_family'] == 'Debian'

    - name: Flush all existing rules
      iptables:
        flush: yes

    # 🔒 락아웃 방지: SSH 허용 먼저 깔아두기
    - name: Ensure SSH is open (lockout protection)
      iptables:
        chain: INPUT
        protocol: tcp
        destination_port: 22
        jump: ACCEPT
        comment: "bootstrap SSH allow"

  tasks:
    - name: Set default policies
      iptables:
        chain: "{{ item.chain }}"
        policy: "{{ item.policy }}"
      loop:
        - { chain: 'INPUT',   policy: '{{ default_input_policy }}' }
        - { chain: 'FORWARD', policy: '{{ default_forward_policy }}' }
        - { chain: 'OUTPUT',  policy: '{{ default_output_policy }}' }

    - name: Allow established and related
      iptables:
        chain: INPUT
        ctstate: ESTABLISHED,RELATED
        jump: ACCEPT
        comment: "Allow established/related"

    - name: Allow loopback
      iptables:
        chain: INPUT
        in_interface: lo
        jump: ACCEPT
        comment: "Allow loopback"

    - name: Apply rules from policy file (INPUT chain)
      iptables:
        chain: INPUT
        protocol: "{{ item.protocol | default(omit) }}"
        destination_port: "{{ (item.port is defined) | ternary(item.port, omit) }}"
        source: "{{ item.source_ip | default(omit) }}"
        jump: "{{ item.action | default('ACCEPT') | upper }}"
        comment: "{{ item.comment | default(omit) }}"
      loop: "{{ rules_from_api | default([]) }}"

    - name: Persist rules to file (Debian/Ubuntu)
      shell: iptables-save > {{ persist_rules_path }}
      notify: Restart netfilter-persistent
      when: ansible_facts['os_family'] == 'Debian'

  handlers:
    - name: Restart netfilter-persistent
      systemd:
        name: netfilter-persistent
        state: restarted
        enabled: yes

