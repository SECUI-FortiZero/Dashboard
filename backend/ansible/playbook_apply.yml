---
- name: Apply firewall allow rules (keep default policies)
  hosts: firewall_servers
  become: yes
  gather_facts: yes

  vars:
    persist_rules_path: /etc/iptables/rules.v4
    lockout_protection: false
    lockout_ssh_port: 22
    lockout_source_cidr: ""

  pre_tasks:
    - name: Ensure iptables tools present (Debian/Ubuntu)
      apt:
        name:
          - iptables
          - iptables-persistent
          - netfilter-persistent
        state: present
        update_cache: yes
      when: ansible_facts['os_family'] == 'Debian'

    - name: (Optional) Lockout protection - open SSH first
      iptables:
        chain: INPUT
        protocol: tcp
        destination_port: "{{ lockout_ssh_port }}"
        source: "{{ (lockout_source_cidr | length) > 0 | ternary(lockout_source_cidr, omit) }}"
        jump: ACCEPT
        comment: "bootstrap SSH allow (optional)"
      when: lockout_protection | bool

  tasks:
    - name: Apply INPUT allow rules from policy file
      iptables:
        chain: INPUT
        protocol: "{{ item.protocol | default(omit) }}"
        destination_port: "{{ (item.port is defined) | ternary(item.port, omit) }}"
        source_port: "{{ (item.sport is defined) | ternary(item.sport, omit) }}"
        source: "{{ item.source_ip | default(omit) }}"
        destination: "{{ item.destination_ip | default(omit) }}"
        jump: "{{ item.action | default('ACCEPT') | upper }}"
        comment: "{{ item.comment | default(omit) }}"
      loop: "{{ rules_from_api | default([]) }}"
      when: >
        (rules_from_api is defined)
        and (item is mapping)
        and (item.direction | default('INPUT') | upper == 'INPUT')

    - name: Apply OUTPUT allow rules from policy file
      iptables:
        chain: OUTPUT
        protocol: "{{ item.protocol | default(omit) }}"
        destination_port: "{{ (item.port is defined) | ternary(item.port, omit) }}"
        source_port: "{{ (item.sport is defined) | ternary(item.sport, omit) }}"
        source: "{{ item.source_ip | default(omit) }}"
        destination: "{{ item.destination_ip | default(omit) }}"
        jump: "{{ item.action | default('ACCEPT') | upper }}"
        comment: "{{ item.comment | default(omit) }}"
      loop: "{{ rules_from_api | default([]) }}"
      when: >
        (rules_from_api is defined)
        and (item is mapping)
        and (item.direction | default('INPUT') | upper == 'OUTPUT')

    - name: Persist rules to file (Debian/Ubuntu)
      shell: iptables-save > {{ persist_rules_path }}
      args:
        warn: false
      notify: Restart netfilter-persistent
      when: ansible_facts['os_family'] == 'Debian'

  handlers:
    - name: Restart netfilter-persistent
      systemd:
        name: netfilter-persistent
        state: restarted
        enabled: yes